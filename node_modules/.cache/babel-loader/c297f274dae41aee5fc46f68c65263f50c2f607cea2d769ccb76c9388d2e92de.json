{"ast":null,"code":"const validate = form => {\n  let errors = {};\n  if (!form.name) {\n    errors.name = 'Name is required';\n  }\n  if (form.name) {\n    if (form.name.includes(/[A-Z]+$/i)) return 'solo letras';\n  }\n  if (!form.height) {\n    errors.height = \"Height is required, type only numbers separated by a dash (-)\";\n  }\n  if (!form.weight) {\n    errors.weight = \"Weight is required, type only numbers separated by a dash (-)\";\n  }\n  if (!form.life_span) {\n    errors.life_span = 'Lifespan is required';\n  }\n  return errors;\n};\n//       //name\n//   let errors = {};\n//   if(!form.name) {\n//     errors.name = 'debes ponerle un nombre'\n//   } else if(!/[A-Z]+$/i.test(form.name)) {\n//     errors.name = 'solo puede contener letras'\n//   } else if(parseInt(form.name.length) >= 25) {\n//     errors.name= 'debe contener menos de 25 caracteres'\n//   }\n//   // /^[A-Z]+$/i\n\n//   //height\n//   if(!form.height_max) {\n//     errors.height_max = \"altura max requerida\"\n//   } else if(parseInt(form.height_max) > 85) {\n//     errors.height_max = 'debe ser menor a 85 CM' \n//   } else if(!/^[0-9]+$/.test(form.height_max)) {\n//     errors.height_max = 'solo puede contener numeros'\n//   }\n\n//   //agregar a los otros inputs\n\n//   if(!form.height_min) {\n//     errors.height_min = 'altura min requerida'\n//   } else if(parseInt(form.height_min) >= parseInt(form.height_max)) {\n//     errors.height_min = 'debe ser menor al max'\n//   } else if(!/^[0-9]+$/.test(form.height_min)) {\n//     errors.height_min = 'solo puede contener numeros'\n//   }\n\n//   //weight  \n//   if(!form.weight_max) {\n//     errors.weight_max = \"peso max requerido\"\n//   } else if(parseInt(form.weight_max) > 90) {\n//     errors.weight_max = 'debe ser menor a 90 KG'\n//   } else if(!/^[0-9]+$/.test(form.weight_max)) {\n//     errors.weight_max = 'solo puede contener numeros'\n//   }\n\n//   if(!form.weight_min) {\n//     errors.weight_min = 'peso min requerido'\n//   } else if(parseInt(form.weight_min) >= parseInt(form.weight_max)) {\n//     errors.weight_min= 'debe ser menor al max'\n//   }\n\n//   //life_span\n//   if(parseInt(form.life_span_max) > 20) {\n//     errors.life_span_max = 'debe ser menor a 20 Años'\n//   } else if(!/^[0-9]+$/.test(form.life_span_max)) {\n//     errors.life_span_max = 'solo puede contener numeros'\n//   }\n\n//   if(parseInt(form.life_span_min) >= parseInt(form.life_span_max)) {\n//     errors.life_span_min = 'debe ser menor al max'\n//   } else if(!/^[0-9]+$/.test(form.life_span_min)) {\n//     errors.life_span_min = 'solo puede contener numeros'\n//   }\n\n//   return errors;\n// }\n\nexport default validate;","map":{"version":3,"names":["validate","form","errors","name","includes","height","weight","life_span"],"sources":["/Users/juli/Desktop/SoyHenry/PIs/PI-Dogs-main/client/src/components/Form/validation.js"],"sourcesContent":["\r\n    const validate = (form) => {\r\n        let errors = {}\r\n        if(!form.name) {\r\n            errors.name = 'Name is required'\r\n        } \r\n        if(form.name) {\r\n            if(form.name.includes(/[A-Z]+$/i))\r\n            return('solo letras')\r\n        }\r\n        \r\n        if(!form.height) {\r\n            errors.height = \"Height is required, type only numbers separated by a dash (-)\"\r\n        }\r\n        if(!form.weight) {\r\n            errors.weight = \"Weight is required, type only numbers separated by a dash (-)\"\r\n        }\r\n        if(!form.life_span) {\r\n            errors.life_span = 'Lifespan is required'\r\n        }\r\n        return errors\r\n    }\r\n//       //name\r\n//   let errors = {};\r\n//   if(!form.name) {\r\n//     errors.name = 'debes ponerle un nombre'\r\n//   } else if(!/[A-Z]+$/i.test(form.name)) {\r\n//     errors.name = 'solo puede contener letras'\r\n//   } else if(parseInt(form.name.length) >= 25) {\r\n//     errors.name= 'debe contener menos de 25 caracteres'\r\n//   }\r\n//   // /^[A-Z]+$/i\r\n\r\n//   //height\r\n//   if(!form.height_max) {\r\n//     errors.height_max = \"altura max requerida\"\r\n//   } else if(parseInt(form.height_max) > 85) {\r\n//     errors.height_max = 'debe ser menor a 85 CM' \r\n//   } else if(!/^[0-9]+$/.test(form.height_max)) {\r\n//     errors.height_max = 'solo puede contener numeros'\r\n//   }\r\n\r\n//   //agregar a los otros inputs\r\n\r\n//   if(!form.height_min) {\r\n//     errors.height_min = 'altura min requerida'\r\n//   } else if(parseInt(form.height_min) >= parseInt(form.height_max)) {\r\n//     errors.height_min = 'debe ser menor al max'\r\n//   } else if(!/^[0-9]+$/.test(form.height_min)) {\r\n//     errors.height_min = 'solo puede contener numeros'\r\n//   }\r\n\r\n\r\n//   //weight  \r\n//   if(!form.weight_max) {\r\n//     errors.weight_max = \"peso max requerido\"\r\n//   } else if(parseInt(form.weight_max) > 90) {\r\n//     errors.weight_max = 'debe ser menor a 90 KG'\r\n//   } else if(!/^[0-9]+$/.test(form.weight_max)) {\r\n//     errors.weight_max = 'solo puede contener numeros'\r\n//   }\r\n\r\n//   if(!form.weight_min) {\r\n//     errors.weight_min = 'peso min requerido'\r\n//   } else if(parseInt(form.weight_min) >= parseInt(form.weight_max)) {\r\n//     errors.weight_min= 'debe ser menor al max'\r\n//   }\r\n\r\n\r\n//   //life_span\r\n//   if(parseInt(form.life_span_max) > 20) {\r\n//     errors.life_span_max = 'debe ser menor a 20 Años'\r\n//   } else if(!/^[0-9]+$/.test(form.life_span_max)) {\r\n//     errors.life_span_max = 'solo puede contener numeros'\r\n//   }\r\n  \r\n//   if(parseInt(form.life_span_min) >= parseInt(form.life_span_max)) {\r\n//     errors.life_span_min = 'debe ser menor al max'\r\n//   } else if(!/^[0-9]+$/.test(form.life_span_min)) {\r\n//     errors.life_span_min = 'solo puede contener numeros'\r\n//   }\r\n\r\n//   return errors;\r\n// }\r\n\r\nexport default validate;"],"mappings":"AACI,MAAMA,QAAQ,GAAIC,IAAI,IAAK;EACvB,IAAIC,MAAM,GAAG,CAAC,CAAC;EACf,IAAG,CAACD,IAAI,CAACE,IAAI,EAAE;IACXD,MAAM,CAACC,IAAI,GAAG,kBAAkB;EACpC;EACA,IAAGF,IAAI,CAACE,IAAI,EAAE;IACV,IAAGF,IAAI,CAACE,IAAI,CAACC,QAAQ,CAAC,UAAU,CAAC,EACjC,OAAO,aAAa;EACxB;EAEA,IAAG,CAACH,IAAI,CAACI,MAAM,EAAE;IACbH,MAAM,CAACG,MAAM,GAAG,+DAA+D;EACnF;EACA,IAAG,CAACJ,IAAI,CAACK,MAAM,EAAE;IACbJ,MAAM,CAACI,MAAM,GAAG,+DAA+D;EACnF;EACA,IAAG,CAACL,IAAI,CAACM,SAAS,EAAE;IAChBL,MAAM,CAACK,SAAS,GAAG,sBAAsB;EAC7C;EACA,OAAOL,MAAM;AACjB,CAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,eAAeF,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}