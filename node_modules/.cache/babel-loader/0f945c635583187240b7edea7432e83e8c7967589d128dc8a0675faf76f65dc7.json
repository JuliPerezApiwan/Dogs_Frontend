{"ast":null,"code":"const validation = form => {\n  //name\n  let errors = {};\n  if (!form.name) {\n    errors.name = 'debes ponerle un nombre';\n  } else if (!/[A-Z]+$/i.test(form.name)) {\n    errors.name = 'solo puede contener letras';\n  } else if (parseInt(form.name.length) >= 25) {\n    errors.name = 'debe contener menos de 25 caracteres';\n  }\n  // /^[A-Z]+$/i\n\n  //height\n  if (!form.height_max) {\n    errors.height_max = \"altura max requerida\";\n  } else if (parseInt(form.height_max) > 85) {\n    errors.height_max = 'debe ser menor a 85 CM';\n  } else if (!/^[0-9]+$/.test(form.height_max)) {\n    errors.height_max = 'solo puede contener numeros';\n  }\n\n  //agregar a los otros inputs\n\n  if (!form.height_min) {\n    errors.height_min = 'altura min requerida';\n  } else if (parseInt(form.height_min) >= parseInt(form.height_max)) {\n    errors.height_min = 'debe ser menor al max';\n  } else if (!/^[0-9]+$/.test(form.height_min)) {\n    errors.height_min = 'solo puede contener numeros';\n  }\n\n  //weight  \n  if (!form.weight_max) {\n    errors.weight_max = \"peso max requerido\";\n  } else if (parseInt(form.weight_max) > 90) {\n    errors.weight_max = 'debe ser menor a 90 KG';\n  } else if (!/^[0-9]+$/.test(form.weight_max)) {\n    errors.weight_max = 'solo puede contener numeros';\n  }\n  if (!input.weight_min) {\n    errors.weight_min = 'peso min requerido';\n  } else if (parseInt(input.weight_min) >= parseInt(input.weight_max)) {\n    errors.weight_min = 'debe ser menor al max';\n  }\n\n  //life_span\n  if (parseInt(form.life_span_max) > 20) {\n    errors.life_span_max = 'debe ser menor a 20 Años';\n  } else if (!/^[0-9]+$/.test(form.life_span_max)) {\n    errors.life_span_max = 'solo puede contener numeros';\n  }\n  if (parseInt(form.life_span_min) >= parseInt(form.life_span_max)) {\n    errors.life_span_min = 'debe ser menor al max';\n  } else if (!/^[0-9]+$/.test(form.life_span_min)) {\n    errors.life_span_min = 'solo puede contener numeros';\n  }\n  return errors;\n};\nexport default validation;","map":{"version":3,"names":["validation","form","errors","name","test","parseInt","length","height_max","height_min","weight_max","input","weight_min","life_span_max","life_span_min"],"sources":["/Users/juli/Desktop/SoyHenry/PIs/PI-Dogs-main/client/src/components/Form/validation.js"],"sourcesContent":["const validation = (form) => {\r\n\r\n      //name\r\n  let errors = {};\r\n  if(!form.name) {\r\n    errors.name = 'debes ponerle un nombre'\r\n  } else if(!/[A-Z]+$/i.test(form.name)) {\r\n    errors.name = 'solo puede contener letras'\r\n  } else if(parseInt(form.name.length) >= 25) {\r\n    errors.name= 'debe contener menos de 25 caracteres'\r\n  }\r\n  // /^[A-Z]+$/i\r\n\r\n  //height\r\n  if(!form.height_max) {\r\n    errors.height_max = \"altura max requerida\"\r\n  } else if(parseInt(form.height_max) > 85) {\r\n    errors.height_max = 'debe ser menor a 85 CM' \r\n  } else if(!/^[0-9]+$/.test(form.height_max)) {\r\n    errors.height_max = 'solo puede contener numeros'\r\n  }\r\n\r\n  //agregar a los otros inputs\r\n\r\n  if(!form.height_min) {\r\n    errors.height_min = 'altura min requerida'\r\n  } else if(parseInt(form.height_min) >= parseInt(form.height_max)) {\r\n    errors.height_min = 'debe ser menor al max'\r\n  } else if(!/^[0-9]+$/.test(form.height_min)) {\r\n    errors.height_min = 'solo puede contener numeros'\r\n  }\r\n\r\n\r\n  //weight  \r\n  if(!form.weight_max) {\r\n    errors.weight_max = \"peso max requerido\"\r\n  } else if(parseInt(form.weight_max) > 90) {\r\n    errors.weight_max = 'debe ser menor a 90 KG'\r\n  } else if(!/^[0-9]+$/.test(form.weight_max)) {\r\n    errors.weight_max = 'solo puede contener numeros'\r\n  }\r\n\r\n  if(!input.weight_min) {\r\n    errors.weight_min = 'peso min requerido'\r\n  } else if(parseInt(input.weight_min) >= parseInt(input.weight_max)) {\r\n    errors.weight_min= 'debe ser menor al max'\r\n  }\r\n\r\n\r\n  //life_span\r\n  if(parseInt(form.life_span_max) > 20) {\r\n    errors.life_span_max = 'debe ser menor a 20 Años'\r\n  } else if(!/^[0-9]+$/.test(form.life_span_max)) {\r\n    errors.life_span_max = 'solo puede contener numeros'\r\n  }\r\n  \r\n  if(parseInt(form.life_span_min) >= parseInt(form.life_span_max)) {\r\n    errors.life_span_min = 'debe ser menor al max'\r\n  } else if(!/^[0-9]+$/.test(form.life_span_min)) {\r\n    errors.life_span_min = 'solo puede contener numeros'\r\n  }\r\n\r\n  return errors;\r\n}\r\n\r\nexport default validation;"],"mappings":"AAAA,MAAMA,UAAU,GAAIC,IAAI,IAAK;EAEvB;EACJ,IAAIC,MAAM,GAAG,CAAC,CAAC;EACf,IAAG,CAACD,IAAI,CAACE,IAAI,EAAE;IACbD,MAAM,CAACC,IAAI,GAAG,yBAAyB;EACzC,CAAC,MAAM,IAAG,CAAC,UAAU,CAACC,IAAI,CAACH,IAAI,CAACE,IAAI,CAAC,EAAE;IACrCD,MAAM,CAACC,IAAI,GAAG,4BAA4B;EAC5C,CAAC,MAAM,IAAGE,QAAQ,CAACJ,IAAI,CAACE,IAAI,CAACG,MAAM,CAAC,IAAI,EAAE,EAAE;IAC1CJ,MAAM,CAACC,IAAI,GAAE,sCAAsC;EACrD;EACA;;EAEA;EACA,IAAG,CAACF,IAAI,CAACM,UAAU,EAAE;IACnBL,MAAM,CAACK,UAAU,GAAG,sBAAsB;EAC5C,CAAC,MAAM,IAAGF,QAAQ,CAACJ,IAAI,CAACM,UAAU,CAAC,GAAG,EAAE,EAAE;IACxCL,MAAM,CAACK,UAAU,GAAG,wBAAwB;EAC9C,CAAC,MAAM,IAAG,CAAC,UAAU,CAACH,IAAI,CAACH,IAAI,CAACM,UAAU,CAAC,EAAE;IAC3CL,MAAM,CAACK,UAAU,GAAG,6BAA6B;EACnD;;EAEA;;EAEA,IAAG,CAACN,IAAI,CAACO,UAAU,EAAE;IACnBN,MAAM,CAACM,UAAU,GAAG,sBAAsB;EAC5C,CAAC,MAAM,IAAGH,QAAQ,CAACJ,IAAI,CAACO,UAAU,CAAC,IAAIH,QAAQ,CAACJ,IAAI,CAACM,UAAU,CAAC,EAAE;IAChEL,MAAM,CAACM,UAAU,GAAG,uBAAuB;EAC7C,CAAC,MAAM,IAAG,CAAC,UAAU,CAACJ,IAAI,CAACH,IAAI,CAACO,UAAU,CAAC,EAAE;IAC3CN,MAAM,CAACM,UAAU,GAAG,6BAA6B;EACnD;;EAGA;EACA,IAAG,CAACP,IAAI,CAACQ,UAAU,EAAE;IACnBP,MAAM,CAACO,UAAU,GAAG,oBAAoB;EAC1C,CAAC,MAAM,IAAGJ,QAAQ,CAACJ,IAAI,CAACQ,UAAU,CAAC,GAAG,EAAE,EAAE;IACxCP,MAAM,CAACO,UAAU,GAAG,wBAAwB;EAC9C,CAAC,MAAM,IAAG,CAAC,UAAU,CAACL,IAAI,CAACH,IAAI,CAACQ,UAAU,CAAC,EAAE;IAC3CP,MAAM,CAACO,UAAU,GAAG,6BAA6B;EACnD;EAEA,IAAG,CAACC,KAAK,CAACC,UAAU,EAAE;IACpBT,MAAM,CAACS,UAAU,GAAG,oBAAoB;EAC1C,CAAC,MAAM,IAAGN,QAAQ,CAACK,KAAK,CAACC,UAAU,CAAC,IAAIN,QAAQ,CAACK,KAAK,CAACD,UAAU,CAAC,EAAE;IAClEP,MAAM,CAACS,UAAU,GAAE,uBAAuB;EAC5C;;EAGA;EACA,IAAGN,QAAQ,CAACJ,IAAI,CAACW,aAAa,CAAC,GAAG,EAAE,EAAE;IACpCV,MAAM,CAACU,aAAa,GAAG,0BAA0B;EACnD,CAAC,MAAM,IAAG,CAAC,UAAU,CAACR,IAAI,CAACH,IAAI,CAACW,aAAa,CAAC,EAAE;IAC9CV,MAAM,CAACU,aAAa,GAAG,6BAA6B;EACtD;EAEA,IAAGP,QAAQ,CAACJ,IAAI,CAACY,aAAa,CAAC,IAAIR,QAAQ,CAACJ,IAAI,CAACW,aAAa,CAAC,EAAE;IAC/DV,MAAM,CAACW,aAAa,GAAG,uBAAuB;EAChD,CAAC,MAAM,IAAG,CAAC,UAAU,CAACT,IAAI,CAACH,IAAI,CAACY,aAAa,CAAC,EAAE;IAC9CX,MAAM,CAACW,aAAa,GAAG,6BAA6B;EACtD;EAEA,OAAOX,MAAM;AACf,CAAC;AAED,eAAeF,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}