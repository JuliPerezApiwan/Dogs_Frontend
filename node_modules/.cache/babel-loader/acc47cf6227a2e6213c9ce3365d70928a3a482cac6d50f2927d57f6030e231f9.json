{"ast":null,"code":"import { GET_ALL_DOGS, ORDER, ORDER_BYWEIGHT, FILTER_BYTEMPERAMENTS, GET_ALL_TEMPERAMENTS, FILTER_FROM_DOGS, GET_DOGS_NAME, GET_DOG_DETAIL, ADD_DOG, CLEAN_DETAIL, CLEAN_FILTER } from './actions-types';\nimport axios from 'axios';\nexport const getAllDogs = () => {\n  return async dispacht => {\n    // const resApi = await axios.get(`https://api.thedogapi.com/v1/breeds?api_key=${MY_API_KEY}`)\n    // const dataApi = resApi.data        \n    const response = await axios.get('http://localhost:3001/dogs');\n    const data = response.data;\n    return dispacht({\n      type: GET_ALL_DOGS,\n      payload: data\n    });\n  };\n};\nexport const getAllTemperaments = () => {\n  return async dispacht => {\n    const response = await axios.get('http://localhost:3001/temperaments');\n    const data = response.data;\n    const temp = data.filter(e => e.name !== null);\n    return dispacht({\n      type: GET_ALL_TEMPERAMENTS,\n      payload: temp\n    });\n  };\n};\nexport const orderDogs = name => {\n  return {\n    type: ORDER,\n    payload: name\n  };\n};\nexport const orderbyWeight = weight => {\n  return {\n    type: ORDER_BYWEIGHT,\n    payload: weight\n  };\n};\nexport const filterbyTemperaments = temperament => {\n  return {\n    type: FILTER_BYTEMPERAMENTS,\n    payload: temperament\n  };\n};\nexport const filterfromDogs = payload => {\n  return {\n    type: FILTER_FROM_DOGS,\n    payload\n  };\n};\nexport const getDogsName = name => {\n  return async dispatch => {\n    try {\n      const response = await axios.get(`http://localhost:3001/dogs/name?name=${name}`);\n      const data = response.data;\n      return await dispatch({\n        type: GET_DOGS_NAME,\n        payload: data\n      });\n    } catch (error) {\n      alert(\"La raza ingresada no existe en la base de datos\");\n      return getAllDogs();\n    }\n  };\n};\nexport const getDogDetail = id => {\n  return async dispatch => {\n    const response = await axios.get(`http://localhost:3001/dogs/${id}`);\n    const data = response.data;\n    return dispatch({\n      type: GET_DOG_DETAIL,\n      payload: data\n    });\n  };\n};\nexport const addDog = payload => {\n  return async dispatch => {\n    const response = axios.post('http://localhost:3001/dog', payload);\n    const data = response.data;\n    return await dispatch({\n      type: ADD_DOG,\n      payload: data\n    });\n  };\n};\nexport const cleanDetail = () => {\n  return {\n    type: CLEAN_DETAIL\n  };\n};\nexport const cleanFilter = () => {\n  return {\n    type: CLEAN_FILTER\n  };\n};","map":{"version":3,"names":["GET_ALL_DOGS","ORDER","ORDER_BYWEIGHT","FILTER_BYTEMPERAMENTS","GET_ALL_TEMPERAMENTS","FILTER_FROM_DOGS","GET_DOGS_NAME","GET_DOG_DETAIL","ADD_DOG","CLEAN_DETAIL","CLEAN_FILTER","axios","getAllDogs","dispacht","response","get","data","type","payload","getAllTemperaments","temp","filter","e","name","orderDogs","orderbyWeight","weight","filterbyTemperaments","temperament","filterfromDogs","getDogsName","dispatch","error","alert","getDogDetail","id","addDog","post","cleanDetail","cleanFilter"],"sources":["/Users/juli/Desktop/SoyHenry/PIs/PI-Dogs-main/client/src/redux/actions.js"],"sourcesContent":["import { GET_ALL_DOGS, ORDER, ORDER_BYWEIGHT, FILTER_BYTEMPERAMENTS, GET_ALL_TEMPERAMENTS, FILTER_FROM_DOGS, GET_DOGS_NAME, GET_DOG_DETAIL, ADD_DOG, CLEAN_DETAIL, CLEAN_FILTER } from './actions-types'\nimport axios from 'axios'\n\nexport const getAllDogs = () => {\n    return async (dispacht) => {\n        // const resApi = await axios.get(`https://api.thedogapi.com/v1/breeds?api_key=${MY_API_KEY}`)\n        // const dataApi = resApi.data        \n        const response = await axios.get('http://localhost:3001/dogs')\n        const data = response.data\n\n        return dispacht({\n            type: GET_ALL_DOGS,\n            payload: data\n        })\n    }\n}\n\nexport const getAllTemperaments = () => {\n    return async (dispacht) => {      \n        const response = await axios.get('http://localhost:3001/temperaments')\n        const data = response.data\n        const temp = data.filter((e) => e.name !== null)\n\n        return dispacht({\n            type: GET_ALL_TEMPERAMENTS,\n            payload: temp\n        })\n    }\n}\n\nexport const orderDogs = (name) => {\n    return {type: ORDER, payload: name}\n}\n\nexport const orderbyWeight = (weight) => {\n    return { type: ORDER_BYWEIGHT, payload: weight };\n};\n\nexport const filterbyTemperaments = (temperament) => {\n    return { type: FILTER_BYTEMPERAMENTS, payload: temperament };\n  };\n\n  export const filterfromDogs = (payload) => {\n    return { type: FILTER_FROM_DOGS, payload };\n  };\n\n  export const getDogsName = (name) => {\n    return async (dispatch) => {\n      try {\n        const response = await axios.get(`http://localhost:3001/dogs/name?name=${name}`);\n      const data = response.data;\n      \n      return await dispatch({\n        type: GET_DOGS_NAME,\n        payload: data,\n      });\n      } catch (error) {\n        alert(\"La raza ingresada no existe en la base de datos\")\n        return getAllDogs()\n      }\n    };\n  };\n\n  export const getDogDetail = (id) => {\n    return async (dispatch) => {\n      const response = await axios.get(`http://localhost:3001/dogs/${id}`);\n      const data = response.data;\n  \n      return dispatch({\n        type: GET_DOG_DETAIL,\n        payload: data,\n      });\n    };\n  };\n\n  export const addDog = (payload) => {\n      return  async (dispatch) => {\n      const response =  axios.post('http://localhost:3001/dog', payload);\n      const data = response.data\n      \n      \n      return await dispatch({\n        type: ADD_DOG,\n        payload:data\n      });\n    };\n  };\n\n  export const cleanDetail = () => {\n    return {\n      type: CLEAN_DETAIL\n    }\n  }\n\n  export const cleanFilter = () => {\n    return {\n      type: CLEAN_FILTER\n    }\n  }"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}